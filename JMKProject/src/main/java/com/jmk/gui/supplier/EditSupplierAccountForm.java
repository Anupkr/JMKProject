/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jmk.gui.supplier;

import com.jmk.beans.Supplier;
import com.jmk.beans.SupplierAccount;
import com.jmk.gui.JMKHome;
import com.jmk.gui.util.GUIUtils;
import com.jmk.service.SupplierAccountService;
import com.jmk.service.SupplierService;
import com.jmk.util.AmmountFormater;
import com.jmk.util.ArrivalType;
import com.jmk.util.StatusMessage;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.config.ConfigurableBeanFactory;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

/**
 *
 * @author mulayam
 */
@Component
@Scope(scopeName = ConfigurableBeanFactory.SCOPE_PROTOTYPE)

public class EditSupplierAccountForm extends javax.swing.JDialog {
    
    private String empty = "";
    
    @Autowired
    private SupplierAccountService supplierAccountService;
    
    private List<SupplierAccount> supplierAccountList;
    
    private int tid;
    private Supplier supplier;
    
    public void setSupplier(Supplier supplier) {
        this.supplier = supplier;
    }
    
    public void setTid(int tid) {
        this.tid = tid;
    }
    
    public String getEmpty() {
        return empty;
    }
    
    public EditSupplierAccountForm() {
        
        initComponents();
        setSize(JMKHome.getPanelHome().getSize());
        setLocationRelativeTo(JMKHome.getPanelHome());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtAddress = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCurrentBalance = new javax.swing.JTextField();
        txtSupplierName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txtPaidAmount = new javax.swing.JTextField();
        txtSaleAmount = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtParticular = new javax.swing.JTextArea();
        txtPurchaseAmount = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(254, 254, 254));
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("DejaVu Serif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(212, 2, 2));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Supplier Account");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 385;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel1, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(234, 234, 234), 1, true));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Supplier Information"));

        txtAddress.setEditable(false);
        txtAddress.setForeground(new java.awt.Color(212, 2, 2));
        txtAddress.setFocusable(false);

        txtMobile.setEditable(false);
        txtMobile.setForeground(new java.awt.Color(212, 2, 2));
        txtMobile.setFocusable(false);

        jLabel6.setText("Mobile");

        jLabel4.setText("Supplier Name");

        jLabel7.setText("Current Balance");

        jLabel5.setText("Address");

        txtCurrentBalance.setEditable(false);
        txtCurrentBalance.setForeground(new java.awt.Color(212, 2, 2));
        txtCurrentBalance.setFocusable(false);

        txtSupplierName.setEditable(false);
        txtSupplierName.setForeground(new java.awt.Color(212, 2, 2));
        txtSupplierName.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSupplierName, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(txtMobile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                    .addComponent(txtCurrentBalance))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCurrentBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Account Details"));

        txtParticular.setColumns(20);
        txtParticular.setRows(5);
        txtParticular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtParticularKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtParticular);

        txtPurchaseAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPurchaseAmountActionPerformed(evt);
            }
        });

        jLabel10.setText("Paid Amount");

        jLabel14.setText("Purchase Amount");

        jLabel9.setText("Sale Amount");

        jLabel12.setText("Particular");

        jLabel8.setText("Date");

        dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(76, 76, 76),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(76, 76, 76),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(76, 76, 76),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("DejaVu Sans", java.awt.Font.PLAIN, 15),
                    new java.awt.Color(76, 76, 76),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel14)
                .addComponent(jLabel9)
                .addComponent(jLabel10)
                .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtPurchaseAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                        .addComponent(txtSaleAmount)
                        .addComponent(txtPaidAmount))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel12)
                    .addGap(61, 61, 61)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(txtPurchaseAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtSaleAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(21, Short.MAX_VALUE))
    );

    btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
    btnSave.setText("Save");
    btnSave.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSaveActionPerformed(evt);
        }
    });

    btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/006-error.png"))); // NOI18N
    btnClose.setText("Close");
    btnClose.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnCloseActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(288, 288, 288)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(13, 13, 13)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(6, 6, 6)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(10, 10, 10)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 8, 0, 10);
    getContentPane().add(jPanel4, gridBagConstraints);

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        if (supplier != null) {
            
            txtSupplierName.setText(supplier.getName());
            txtAddress.setText(supplier.getAddress1());
            txtMobile.setText(supplier.getMobile1());
            
            Double editCurrentBalance = supplierAccountService.getCurrentBalanceBeforeTId(supplier.getId(), tid);
            System.out.println(tid + "    :   " + editCurrentBalance);
            
            if (editCurrentBalance == null) {
                editCurrentBalance = 0.0;
            }
            //call formateDoubleToString to remove exponential form of double amount value
            txtCurrentBalance.setText(AmmountFormater.formateDoubleToString(editCurrentBalance));
            
            supplierAccountList = supplierAccountService.getListFromTransactionId(supplier.getId(), tid);

            //get firt row from list which has to edit
            SupplierAccount account = supplierAccountList.get(0);
            //set the current value in text field

            txtPaidAmount.setText(account.getPaidAmountAsString());
            txtParticular.setText(account.getParticular());
            txtPurchaseAmount.setText(account.getPurchaseAmountAsString());
            txtSaleAmount.setText(account.getSaleAmountAsString());
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(account.getDate());
            dateChooserCombo1.setSelectedDate(calendar);

            //check if arrival type is STOCK_ENTRY then disable txtPurchaseAmount field
            if (ArrivalType.ARRIVAL_TYPE_PARTY_STOCK.equalsIgnoreCase(supplier.getArrivalType())) {
                txtPurchaseAmount.setEnabled(false);
            }
            
        } else {
            dispose();
        }

    }//GEN-LAST:event_formWindowOpened
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(rootPane, "Are you sure?", "Confirmation", JOptionPane.YES_NO_OPTION)) {
            
            String arrivalType = supplier.getArrivalType();
            if (arrivalType.equalsIgnoreCase(ArrivalType.ARRIVAL_TYPE_PARTY_STOCK)) {
                //update if arrivaltype is Party Stock

                try {
                    double currentBalance = Double.parseDouble(txtCurrentBalance.getText());
                    
                    double saleAmount = Double.parseDouble(txtSaleAmount.getText());
                    double paidAmount = Double.parseDouble(txtPaidAmount.getText());
                    currentBalance = (currentBalance + saleAmount) - paidAmount;
                    String particular = txtParticular.getText().trim();

                    //get First row from row which has to be updated
                    SupplierAccount account = supplierAccountList.get(0);
//                    JOptionPane.showMessageDialog(rootPane, account);

                    //set new values
                    account.setSaleAmount(saleAmount);
                    account.setPaidAmount(paidAmount);
                    account.setParticular(particular);
                    account.setDate(dateChooserCombo1.getSelectedDate().getTime());
                    
                    account.setCurrentBalance(currentBalance);
                    //replace existing firt row with updated value
                    supplierAccountList.set(0, account);

                    //currentBalance for next row
                    //update the current balance of each row after editing row
                    for (int i = 1; i < supplierAccountList.size(); i++) {
                        
                        account = supplierAccountList.get(i);
                        currentBalance = (currentBalance + account.getSaleAmount()) - account.getPaidAmount();
                        account.setCurrentBalance(currentBalance);

                        //update list 
                        supplierAccountList.set(i, account);
                        
                    }
                    System.out.println(supplierAccountList);
//                    String message = "";
                    String message = supplierAccountService.updateAccountList(supplierAccountList);
                    if (StatusMessage.STATUS_SUCCESS.equalsIgnoreCase(message)) {
                        GUIUtils.showSuccessMessage(rootPane, "Successfully Updated");
                        dispose();
                    } else {
                        GUIUtils.showErrorMessage(rootPane, message);
                    }
                    
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Amount");
                }
            } else {
                //save data for selfPurchase stock
                try {
                    
                    double currentBalance = Double.parseDouble(txtCurrentBalance.getText());
                    
                    double purchaseAmount = Double.parseDouble(txtPurchaseAmount.getText());
                    
                    double saleAmount = Double.parseDouble(txtSaleAmount.getText());
                    double paidAmount = Double.parseDouble(txtPaidAmount.getText());
                    currentBalance = currentBalance + purchaseAmount - paidAmount;
                    
                    String particular = txtParticular.getText().trim();

                    //get First row from row which has to be updated
                    SupplierAccount account = supplierAccountList.get(0);

                    //set new values
                    account.setSaleAmount(saleAmount);
                    account.setPaidAmount(paidAmount);
                    account.setParticular(particular);
                    account.setDate(dateChooserCombo1.getSelectedDate().getTime());
                    
                    account.setCurrentBalance(currentBalance);
                    //replace existing firt row with updated value
                    supplierAccountList.set(0, account);

                    //currentBalance for next row
                    //update the current balance of each row after editing row
                    for (int i = 1; i < supplierAccountList.size(); i++) {
                        
                        account = supplierAccountList.get(i);
                        currentBalance = currentBalance + account.getPurchaseAmount() - account.getPaidAmount();
                        account.setCurrentBalance(currentBalance);
                        //update list
                        supplierAccountList.set(i, account);
                        
                    }
//                    JOptionPane.showMessageDialog(rootPane, supplierAccountList);
                    System.out.println(supplierAccountList);
                    String mesage = supplierAccountService.updateAccountList(supplierAccountList);
                    if (StatusMessage.STATUS_SUCCESS.equalsIgnoreCase(mesage)) {
                        GUIUtils.showSuccessMessage(rootPane, "Successfully Updated");
                        dispose();
                    } else {
                        GUIUtils.showErrorMessage(rootPane, mesage);
                    }
                    
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Amount");
                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed
    

    private void txtParticularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParticularKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            evt.consume();
            KeyboardFocusManager.
                    getCurrentKeyboardFocusManager().focusNextComponent();
        }
        
        if (evt.getKeyCode() == KeyEvent.VK_TAB
                && evt.isShiftDown()) {
            evt.consume();
            KeyboardFocusManager.
                    getCurrentKeyboardFocusManager().focusPreviousComponent();
        }
    }//GEN-LAST:event_txtParticularKeyPressed

    private void txtPurchaseAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPurchaseAmountActionPerformed

    }//GEN-LAST:event_txtPurchaseAmountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCurrentBalance;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtPaidAmount;
    private javax.swing.JTextArea txtParticular;
    private javax.swing.JTextField txtPurchaseAmount;
    private javax.swing.JTextField txtSaleAmount;
    private javax.swing.JTextField txtSupplierName;
    // End of variables declaration//GEN-END:variables
}
